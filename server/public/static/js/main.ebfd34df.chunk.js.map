{"version":3,"sources":["services/auth.services.js","components/pages/auth/login/Login.js","components/pages/auth/signup/Signup.js","services/activities.services.js","components/pages/activitiesList/activitiesCard.js","components/pages/activitiesList/activitiesList.js","components/pages/maps/map.js","components/pages/activitiesDetails/activitiesDetails.js","components/pages/activitiesList/newActivity.js","components/ui/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["Services","signup","username","password","service","post","then","response","data","login","logout","loggedin","get","this","axios","create","baseURL","process","withCredentials","Login","props","handleChange","e","target","name","value","setState","postUser","services","state","theLoggedUser","setTheUser","history","push","catch","err","console","log","handleSubmit","preventDefault","AuthServices","Container","Form","onSubmit","Group","Label","Control","type","onChange","Button","variant","Component","Signup","theNewUser","company","controlId","Check","label","getAllActivities","getActivitiesDetails","id","postActivities","activity","ActivitiesCard","image","price","province","_id","Col","md","Card","to","Img","src","Body","Title","Text","ActivitiesList","componentDidMount","allActiv","activities","ActivitiesServices","length","Row","map","elm","key","AnyReactComponent","text","Map","style","height","width","latitud","bootstrapURLKeys","REACT_APP_API_KEY","center","longitud","zoom","lat","lng","ActivitiesDetails","match","params","className","span","offset","difficulty","duration","description","as","size","emptyActivity","date","NewActivity","postActivity","onClick","CompanyNavbar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","UserNavbar","NavDropdown","title","Item","Divider","Navigation","user","role","App","componentDidUpdate","prevProps","prevState","fetchUser","userObj","theUser","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ebfd34df.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/auth`,\n            withCredentials: true\n        })\n    }\n\n    signup = ({ username, password }) => this.service.post('/signup', { username, password }).then(response => response.data)\n    login = ({ username, password }) => this.service.post('/login', { username, password }).then(response => response.data)\n    logout = () => this.service.post('/logout').then(response => response.data)\n    loggedin = () => this.service.get('/loggedin').then(response => response.data)\n}","import React, { Component } from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\n\nimport AuthServices from '../../../../services/auth.services'\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            password: \"\"\n        }\n        this.services = new AuthServices()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n\n    }\n    postUser = () => {\n        this.services.login(this.state)\n            .then(theLoggedUser => {\n                this.setState({ username: '', password: '' })\n                this.props.setTheUser(theLoggedUser)\n                this.props.history.push('/')\n            })\n            .catch(err => console.log({ err }))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postUser()\n    }\n\n    render() {\n        return (\n\n            <Container>\n\n                <h1>Iniciar sesión</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Usuario</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        ¡Entra!</Button>\n                </Form>\n\n            </Container>\n        )\n    }\n}\nexport default Login","import React, { Component } from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\n\nimport AuthServices from '../../../../services/auth.services'\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            password: \"\",\n            company:\"\"\n        }\n        this.services = new AuthServices()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n\n    }\n    postUser = () => {\n        this.services.signup(this.state)\n            .then(theNewUser => {\n                this.setState({ username: '', password: '' })\n                this.props.setTheUser(theNewUser)\n                this.props.history.push('/')\n             \n            })\n            .catch(err => console.log({ err }))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postUser()\n    }\n\n    render() {\n        return (\n\n            <Container>\n\n                <h1>Registrar usuario</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Usuario</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"¿Tienes una empresa?\" />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Nombre de sociedad</Form.Label>\n                        <Form.Control type=\"text\" name=\"nombreSociedad\" value={this.state.company} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        ¡Regístrate!</Button>\n                </Form>\n\n            </Container>\n        )\n    }\n}\nexport default Signup","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/activities`,\n            withCredentials: true\n        })\n    }\n    getAllActivities = () => this.service.get('/getAllActivities').then(response => response.data)\n    getActivitiesDetails = id => this.service.get(`/getOneActivity/${id}`).then(response => response.data)\n    postActivities = activity => this.service.post(`/new`, activity).then(response => response.data)\n}","import React from 'react'\n\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport { Link } from 'react-router-dom'\n\n\n// import { Link } from 'react-router-dom'\n\nconst ActivitiesCard = ({ image, activity, company, price, province, _id }) => {\n    return (\n\n        <Col md={4}>\n\n            <Card>\n                <Link to={`/getOneActivity/${_id}`}>\n                    <Card.Img variant=\"top\" src={image} />\n                </Link>\n                <Card.Body>\n                    <Card.Title>{activity}</Card.Title>\n                    <Card.Text>{company}</Card.Text>\n                    <Card.Text>{price} €</Card.Text>\n                    <Card.Text>{province}</Card.Text>\n                </Card.Body>\n\n            </Card>\n\n        </Col>\n    )\n}\n\nexport default ActivitiesCard","import React, { Component } from 'react'\nimport ActivitiesServices from '../../../services/activities.services'\n\nimport ActivitiesCard from './activitiesCard'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\n\n\nclass ActivitiesList extends Component {\n    constructor() {\n        super()\n        this.state = {\n            activities: [],\n        }\n        this.services = new ActivitiesServices()\n    }\n\n    componentDidMount = () => this.getAllActivities()\n\n    getAllActivities = () => {\n        this.services.getAllActivities()\n            .then(allActiv => this.setState({ activities: allActiv }))\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        return (\n            <Container>\n             \n                {this.state.activities.length ? (\n                    <Row>\n                        {this.state.activities.map(elm => <ActivitiesCard key={elm._id}{...elm} />)}\n                    </Row>\n                ) :\n                    <p>Cargando...</p>\n                }\n            </Container>\n        )\n    }\n}\n\n\nexport default ActivitiesList","import React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>\n\nclass Map extends Component {\n    constructor(props) {\n        super(props)\n\n    }\n    render() {\n        return (\n            <div style={{ height: '400px', width: '80%' }}>\n                {this.props.latitud ?\n                    <GoogleMapReact\n                        bootstrapURLKeys={{ key: process.env.REACT_APP_API_KEY }}\n                        center={[this.props.latitud, this.props.longitud]}\n                        zoom={16}\n                    >\n                        <AnyReactComponent\n                            lat={this.props.latitud}\n                            lng={this.props.longitud}\n                            text={this.props.name}\n                        />\n                    </GoogleMapReact>\n                    :\n                    null\n                }\n            </div>\n        )\n    }\n}\n\nexport default Map","import React, { Component } from 'react'\n\nimport ActivitiesServices from '../../../services/activities.services'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Map from '../maps/map'\n\nimport { Link } from 'react-router-dom'\n\nclass ActivitiesDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { activity: {} }\n        this.services = new ActivitiesServices()\n\n        console.log('las props por defecto serían estas:', this.props)\n    }\n\n    componentDidMount = () => this.getActivitiesDetails()\n\n    getActivitiesDetails = () => {\n        this.services.getActivitiesDetails(this.props.match.params.id)\n            .then(activity => this.setState({ activity }))\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        console.log('process emv', process.env)\n        return (\n            <Container className=\"activity-details\">\n                <h1>{this.state.activity.company}</h1>\n                <Row>\n                    <Col md={{ span: 4, offset: 1 }}>\n                        <hr></hr>\n\n                        <Card.Body>\n                            <h3>{this.state.activity.activity}</h3>\n                            <Card.Text>Dificultad: {this.state.activity.difficulty}</Card.Text>\n                            <Card.Text>Duración: {this.state.activity.duration} horas</Card.Text>\n                            <Card.Text>{this.state.activity.description}</Card.Text>\n                        </Card.Body>\n\n                    </Col>\n                    <Col md={{ span: 5, offset: 1 }}>\n                        <Card.Img variant=\"top\" src={this.state.activity.image} />\n                    </Col>\n                </Row>\n                <Row style={{ height: \"500px\" }}>\n                    <Map latitud={40.394531} longitud={-3.699706} name=\"Matadero\" />\n                </Row>\n                <Button as=\"div\" variant=\"dark\" size=\"sm\">\n                    <Link to=\"/getAllActivities\">Volver</Link>\n                </Button>\n            </Container >\n        )\n    }\n}\n\nexport default ActivitiesDetails","import React, { Component } from 'react'\n\nimport ActivitiesServices from '../../../services/activities.services'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\n\nconst emptyActivity = {\n    activity: '',\n    company: '',\n    duration: '',\n    price: '',\n    description: '',\n    date: '',\n};\n\n\n//import FilesServices from '../../../services/files.services'\n\n\nclass NewActivity extends Component {\n    constructor() {\n        super()\n        this.state = {\n            activity: emptyActivity,\n        }\n        this.services = new ActivitiesServices()\n    }\n\n\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    postActivity = () => {\n        this.services.postActivities(this.state)\n            .then(() => {\n                this.setState({ activity: emptyActivity })\n                this.props.history.push('/')\n            })\n            .catch(err => console.log({ err }))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postActivity()\n    }\n\n\n    render() {\n        return (\n\n            <Container>\n\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Actividad</Form.Label>\n                        <Form.Control type=\"text\" name=\"activity\" value={this.state.activity.activity} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Empresa</Form.Label>\n                        <Form.Control type=\"text\" name=\"company\" value={this.state.activity.company} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Duración</Form.Label>\n                        <Form.Control type=\"number\" name=\"duration\" value={this.state.activity.duration} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control type=\"number\" name=\"price\" value={this.state.activity.price} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control type=\"text\" name=\"description\" value={this.state.activity.description} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Fecha</Form.Label>\n                        <Form.Control type=\"date\" name=\"date\" value={this.state.activity.date} onChange={this.handleChange} />\n                    </Form.Group>\n\n\n\n                    <Button onClick={this.handleSubmit} variant=\"dark\">Crear nueva actividad</Button>\n                </Form>\n\n            </Container>\n        )\n    }\n\n\n}\nexport default NewActivity","import React, { Component } from 'react'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\n\nimport AuthServices from '../../services/auth.services'\n\nimport { Link } from 'react-router-dom'\n\nconst CompanyNavbar = () =>\n    <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">Quake</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n                <Nav.Link as=\"div\"> <Link to=\"/new\">Registrar actividad</Link></Nav.Link>\n                <Nav.Link as=\"div\"> <Link to=\"/signup\">Registro</Link></Nav.Link>\n                <Nav.Link as=\"div\"> <Link to=\"/login\">Inicio sesión</Link></Nav.Link>\n            </Nav>\n        </Navbar.Collapse>\n    </Navbar>;\n\nconst UserNavbar = () =>\n    <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">Quake</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n                <NavDropdown title=\"Deportes\" id=\"basic-nav-dropdown\">\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                </NavDropdown>\n                <NavDropdown title=\"Provincias\" id=\"basic-nav-dropdown\">\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                </NavDropdown>\n                <Nav.Link as=\"div\"> <Link to=\"/signup\">Registro</Link></Nav.Link>\n                <Nav.Link as=\"div\"> <Link to=\"/login\">Inicio sesión</Link></Nav.Link>\n            </Nav>\n        </Navbar.Collapse>\n    </Navbar>;\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n        this.services = new AuthServices()\n    }\n\n    logout = () => {\n        this.services.logout()\n            .then(response => {\n                this.props.setTheUser(false)\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n\n        return (\n            this.props.user && this.props.user.role === 'COMPANY' ? <CompanyNavbar /> : <UserNavbar />\n        )\n    }\n}\n\nexport default Navigation","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Login from './components/pages/auth/login/Login'\nimport Signup from './components/pages/auth/signup/Signup'\nimport ActivitiesList from './components/pages/activitiesList/activitiesList'\nimport ActivitiesDetails from './components/pages/activitiesDetails/activitiesDetails'\nimport NewActivity from './components/pages/activitiesList/newActivity'\nimport Navigation from './components/ui/NavBar'\nimport AuthServices from './services/auth.services'\nimport { Switch, Route } from 'react-router-dom'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = { user: null }\n    this.services = new AuthServices()\n  }\n\n  componentDidUpdate = (prevProps, prevState) => console.log(\"El estado de App se ha actualizado:\", this.state)\n  componentDidMount = () => this.fetchUser()\n\n  setTheUser = userObj => this.setState({ user: userObj })\n\n  fetchUser = () => {\n    this.services.loggedin()\n      .then(theUser => this.setState({ user: theUser }))\n      .catch(() => this.setState({ user: false }))\n  }\n\n  render() {\n    return (\n      <>\n\n        {<Navigation user={this.state.user} fetchUser={this.fetchUser} />}\n        <a href='/getAllActivities'>Ínspirame</a>\n\n        <Switch>\n\n          <Route path=\"/login\" render={props => <Login setTheUser={this.setTheUser} {...props} />} />\n          <Route path=\"/signup\" render={props => <Signup setTheUser={this.setTheUser} {...props} />} />\n          <Route path=\"/getAllActivities\" render={props => <ActivitiesList setTheUser={this.setTheUser} {...props} />} />\n          <Route path=\"/getOneActivity/:id\" render={props => <ActivitiesDetails setTheUser={this.setTheUser} {...props} />} />\n          <Route path=\"/new\" render={props => <NewActivity setTheUser={this.setTheUser} {...props} />} />\n\n\n        </Switch>\n\n\n      </>\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n    \n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}